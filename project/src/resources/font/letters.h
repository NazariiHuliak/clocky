#ifndef LETTERS_H
#define LETTERS_H
#include <Arduino.h>

const byte letters[26][5] = {
    {
        // A
        0b01000000,
        0b10100000,
        0b11100000,
        0b10100000,
        0b10100000
    },
    {
        // B
        0b11000000,
        0b10100000,
        0b11000000,
        0b10100000,
        0b11000000
    },
    {
        // C
        0b01100000,
        0b10000000,
        0b10000000,
        0b10000000,
        0b01100000
    },
    {
        // D
        0b11000000,
        0b10100000,
        0b10100000,
        0b10100000,
        0b11000000
    },
    {
        // E
        0b11100000,
        0b10000000,
        0b11100000,
        0b10000000,
        0b11100000
    },
    {
        // F
        0b11100000,
        0b10000000,
        0b11000000,
        0b10000000,
        0b10000000
    },
    {
        // G
        0b01100000,
        0b10000000,
        0b10100000,
        0b10100000,
        0b01100000
    },
    {
        // H
        0b10100000,
        0b10100000,
        0b11100000,
        0b10100000,
        0b10100000
    },
    {
        // I
        0b11100000,
        0b01000000,
        0b01000000,
        0b01000000,
        0b11100000
    },
    {
        // J
        0b00100000,
        0b00100000,
        0b00100000,
        0b10100000,
        0b01000000
    },
    {
        // K
        0b10100000,
        0b11000000,
        0b10000000,
        0b11000000,
        0b10100000
    },
    {
        // L
        0b10000000,
        0b10000000,
        0b10000000,
        0b10000000,
        0b11100000
    },
    {
        // M
        0b10100000,
        0b11100000,
        0b11100000,
        0b10100000,
        0b10100000
    },
    {
        // N
        0b11000000,
        0b10100000,
        0b10100000,
        0b10100000,
        0b10100000
    },
    {
        // O
        0b11100000,
        0b10100000,
        0b10100000,
        0b10100000,
        0b11100000
    },
    {
        // P
        0b11000000,
        0b10100000,
        0b11000000,
        0b10000000,
        0b10000000
    },
    {
        // Q
        0b01000000,
        0b10100000,
        0b10100000,
        0b01000000,
        0b00100000
    },
    {
        // R
        0b11000000,
        0b10100000,
        0b11000000,
        0b10100000,
        0b10100000
    },
    {
        // S
        0b01100000,
        0b10000000,
        0b01000000,
        0b00100000,
        0b11000000
    },
    {
        // T
        0b11100000,
        0b01000000,
        0b01000000,
        0b01000000,
        0b01000000
    },
    {
        // U
        0b10100000,
        0b10100000,
        0b10100000,
        0b10100000,
        0b11100000
    },
    {
        // V
        0b10100000,
        0b10100000,
        0b10100000,
        0b10100000,
        0b01000000
    },
    {
        // W
        0b10100000,
        0b10100000,
        0b11100000,
        0b11100000,
        0b10100000
    },
    {
        // X
        0b10100000,
        0b10100000,
        0b01000000,
        0b10100000,
        0b10100000
    },
    {
        // Y
        0b10100000,
        0b10100000,
        0b01000000,
        0b01000000,
        0b01000000
    },
    {
        // Z
        0b11100000,
        0b00100000,
        0b01000000,
        0b10000000,
        0b11100000
    }
};

const byte *getLetterPattern(char letter) {
    if (letter >= 'a' && letter <= 'z') {
        letter = letter - 'a' + 'A';
    }

    uint8_t index = letter - 'A';
    return letters[index];
}

#endif
